version: '3'
services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: dockerdb
      POSTGRES_USER: dockeruser
      POSTGRES_PASSWORD: password
    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    ports:
      - "5432:5432"
    networks:
      - spring-boot-network

  image-service:
    image: image-service:latest
    build:
      context: ./image-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dockerdb
      SPRING_DATASOURCE_USERNAME: dockeruser
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: "dev"
      CONFIGSERVER_URI: "http://configserver:8089"
      ENCRYPT_KEY: "IMSYMMETRIC"
    networks:
      - spring-boot-network
    depends_on:
      - postgres
      - configserver  # Ensure image-service depends on configserver

  configserver:
    image: configserver:latest
    ports:
      - "8089:8089"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
      SERVER_PORT: "8089"
    networks:
      - spring-boot-network

  metadata-service:
    image: metadata-service:latest
    build:
      context: ./metadata-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dockerdb
      SPRING_DATASOURCE_USERNAME: dockeruser
      SPRING_DATASOURCE_PASSWORD: password
    networks:
      - spring-boot-network
    depends_on:
      - postgres

networks:
  spring-boot-network:
    driver: bridge
